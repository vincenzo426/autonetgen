# Multi-stage build for optimal frontend deployment on GCP Cloud Run
# Stage 1: Build the React application
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files for dependency installation
COPY network-analyzer-gui/package*.json ./

# Install dependencies with clean install for production
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY network-analyzer-gui/ ./

# Build arguments for environment configuration
ARG REACT_APP_API_URL
ARG REACT_APP_ENVIRONMENT=production
ARG REACT_APP_VERSION=1.0.0

ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_ENVIRONMENT=$REACT_APP_ENVIRONMENT
ENV REACT_APP_VERSION=$REACT_APP_VERSION
ENV NODE_ENV=production

# Build the application
RUN npm run build

# Stage 2: Production nginx server
FROM nginx:alpine

# Install envsubst for runtime environment variable substitution
RUN apk add --no-cache gettext

# Copy nginx configuration
COPY network-analyzer-gui/nginx/nginx.conf /etc/nginx/conf.d/default.conf.template

# Copy the built application
COPY --from=builder /app/build /usr/share/nginx/html

# Create health check endpoint
RUN echo "OK" > /usr/share/nginx/html/health

# Copy startup script for environment variable substitution
COPY network-analyzer-gui/nginx/docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Create non-root user for security
RUN addgroup -g 1001 -S nginx-user && \
    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G nginx-user -g nginx-user nginx-user

# Set proper permissions
RUN chown -R nginx-user:nginx-user /usr/share/nginx/html && \
    chown -R nginx-user:nginx-user /var/cache/nginx && \
    chown -R nginx-user:nginx-user /var/log/nginx && \
    chown -R nginx-user:nginx-user /etc/nginx/conf.d

# Create directories for nginx
RUN mkdir -p /var/cache/nginx/client_temp && \
    mkdir -p /var/cache/nginx/proxy_temp && \
    mkdir -p /var/cache/nginx/fastcgi_temp && \
    mkdir -p /var/cache/nginx/uwsgi_temp && \
    mkdir -p /var/cache/nginx/scgi_temp && \
    chown -R nginx-user:nginx-user /var/cache/nginx

# Environment variables for runtime configuration
ENV BACKEND_API_URL=""
ENV NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d

# Expose port 8080 (Cloud Run prefers this port)
EXPOSE 8080

# Use non-root user
USER nginx-user

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Use custom entrypoint for environment variable substitution
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]